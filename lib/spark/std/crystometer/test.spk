~weave~ = 250  // Moderate thread count for tests

@seeds@
std**crystometer
std**test
@seeds@

@spells@
#[test]
fn test_crystal_measurement() {
    let mut crystal = Crystal::new(100);
    
    let duration = crystal.measure(|| {
        std::thread::sleep(std::time::Duration::from_millis(1));
        Ok(())
    }).unwrap();
    
    assert!(duration > 0);
    assert_eq!(crystal.measurements.len(), 1);
}

#[test]
fn test_resonance_calculation() {
    let mut crystal = Crystal::new(500);
    
    // Add some controlled measurements
    for i in 1..=5 {
        crystal.measure(|| {
            std::thread::sleep(std::time::Duration::from_millis(i));
            Ok(())
        }).unwrap();
    }
    
    let report = crystal.generate_report();
    assert!(report.thread_efficiency > 0.0);
    assert!(report.thread_efficiency <= 1.0);
    assert_eq!(report.resonance_pattern.len(), 3);  // With 5 measurements, we get 3 patterns
}
@spells@
